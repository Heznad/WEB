from django.http import HttpResponseNotFound, Http404
from django.shortcuts import redirect, render, get_object_or_404
from .models import Game, Review, Status, Genre, Tag, UploadFiles, Cart, CartItem 
from django.contrib.auth.models import User
from .forms import AddGameModelForm, UploadFileForm
from django.db import connection
from django.conf import settings
menu = ['–ì–ª–∞–≤–Ω–∞—è', '–ö–∞—Ç–∞–ª–æ–≥', '–û—Ç–∑—ã–≤—ã', '–û —Å–∞–π—Ç–µ', '–í–æ–π—Ç–∏']

def fill_database():
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ - —É–¥–∞–ª—è–µ–º –∏—Ö
    if Game.objects.exists() or Genre.objects.exists() or Tag.objects.exists():
        """print("üóëÔ∏è –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        CartItem.objects.all().delete()
        Cart.objects.all().delete()
        Review.objects.all().delete()
        Game.objects.all().delete()
        UploadFiles.objects.all().delete()  # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∏—Å—Ç–∫—É –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        Tag.objects.all().delete()
        Genre.objects.all().delete()
        User.objects.filter(username='test_user').delete()
        
        # –°–±—Ä–æ—Å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
        with connection.cursor() as cursor:
            cursor.execute("DELETE FROM sqlite_sequence WHERE name IN ('games_game', 'games_genre', 'games_tag', 'games_review', 'games_cart', 'games_cartitem', 'games_uploadfiles', 'games_game_tags', 'games_game_genres')")
        
        print("‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç —Å–±—Ä–æ—à–µ–Ω")"""
        return

    print("üîÑ –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")

    # –°–æ–∑–¥–∞–µ–º –∂–∞–Ω—Ä—ã
    genres_data = [
        {'name': '–≠–∫—à–µ–Ω'},
        {'name': '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è'},
        {'name': 'RPG'},
        {'name': '–®—É—Ç–µ—Ä'},
        {'name': '–§—ç–Ω—Ç–µ–∑–∏'},
        {'name': '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä'},
        {'name': '–•–æ—Ä—Ä–æ—Ä'},
        {'name': '–°–ø–æ—Ä—Ç'},
        {'name': '–°–∏–º—É–ª—è—Ç–æ—Ä'},
        {'name': '–í—ã–∂–∏–≤–∞–Ω–∏–µ'},
        {'name': '–ü–µ—Å–æ—á–Ω–∏—Ü–∞'},
    ]
    
    genres_dict = {}
    for genre_data in genres_data:
        genre = Genre.objects.create(name=genre_data['name'])
        genres_dict[genre.name] = genre
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∂–∞–Ω—Ä: {genre.name} (slug: {genre.slug})")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏
    tags_data = [
        {'name': '–•–∏—Ç –ø—Ä–æ–¥–∞–∂'},
        {'name': '–ù–æ–≤–∏–Ω–∫–∞'},
        {'name': '–°–æ —Å–∫–∏–¥–∫–æ–π'},
        {'name': '–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞'},
        {'name': '–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä'},
        {'name': '–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤'},
        {'name': '–û–¥–∏–Ω–æ—á–Ω–∞—è'},
        {'name': '–° –ø—Ä–æ–∫–∞—á–∫–æ–π'},
        {'name': '–° –∫—Ä–∞—Ñ—Ç–æ–º'},
        {'name': '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è'},
    ]
    
    tags_dict = {}
    for tag_data in tags_data:
        tag = Tag.objects.create(name=tag_data['name'])
        tags_dict[tag.name] = tag
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag.name} (slug: {tag.slug})")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ—Ä–∑–∏–Ω—ã
    test_user, created = User.objects.get_or_create(
        username='test_user',
        defaults={
            'email': 'test@example.com', 
            'first_name': '–¢–µ—Å—Ç–æ–≤—ã–π', 
            'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        }
    )
    if created:
        test_user.set_password('test123')
        test_user.save()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.username}")

    # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cart, created = Cart.objects.get_or_create(user=test_user)
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user.username}")

    # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä (—Ç–µ–ø–µ—Ä—å –±–µ–∑ –ø–æ–ª—è image - –æ–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É)
    games_data = [
        {
            'title': 'Uncharted', 
            'price': 999.00, 
            'platform': 'PS3', 
            'year_release': 2007, 
            'is_stock': False, 
            'age_rating': '16+',
            'description': '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π —ç–∫—à–µ–Ω –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –ª–∏—Ü–∞, –≥–¥–µ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ –æ—Ö–æ—Ç–Ω–∏–∫–∞ –∑–∞ —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏ –ù–µ–π—Ç–∞–Ω–∞ –î—Ä–µ–π–∫–∞.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–≠–∫—à–µ–Ω', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–®—É—Ç–µ—Ä'],
            'tag_names': ['–û–¥–∏–Ω–æ—á–Ω–∞—è', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è']
        },
        {
            'title': 'The Witcher 3: Wild Hunt', 
            'price': 1999.00, 
            'platform': 'XBOX', 
            'year_release': 2015, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': '–≠–ø–∏—á–µ—Å–∫–∞—è RPG –≤ –º–∏—Ä–µ —Ñ—ç–Ω—Ç–µ–∑–∏, –≥–¥–µ –≤—ã –ì–µ—Ä–∞–ª—å—Ç –∏–∑ –†–∏–≤–∏–∏ - –≤–µ–¥—å–º–∞–∫, –æ—Ö–æ—Ç—è—â–∏–π—Å—è –Ω–∞ –º–æ–Ω—Å—Ç—Ä–æ–≤.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['RPG', '–§—ç–Ω—Ç–µ–∑–∏', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è'],
            'tag_names': ['–•–∏—Ç –ø—Ä–æ–¥–∞–∂', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä', '–° –ø—Ä–æ–∫–∞—á–∫–æ–π', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
        {
            'title': 'Grand Theft Auto V', 
            'price': 1499.00, 
            'platform': 'PC', 
            'year_release': 2013, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫—à–µ–Ω–∞ —Å —Ç—Ä–µ–º—è –ø—Ä–æ—Ç–∞–≥–æ–Ω–∏—Å—Ç–∞–º–∏ –≤ –≥–æ—Ä–æ–¥–µ –õ–æ—Å-–°–∞–Ω—Ç–æ—Å.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–≠–∫—à–µ–Ω', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä'],
            'tag_names': ['–•–∏—Ç –ø—Ä–æ–¥–∞–∂', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä', '–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä']
        },
        {
            'title': 'Elden Ring', 
            'price': 2609.00, 
            'platform': 'PS5', 
            'year_release': 2022, 
            'is_stock': True, 
            'age_rating': '16+',
            'description': '–§—ç–Ω—Ç–µ–∑–∏–π–Ω–∞—è action-RPG —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –º–∏—Ä–æ–º –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π Dark Souls.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['RPG', '–§—ç–Ω—Ç–µ–∑–∏', '–≠–∫—à–µ–Ω'],
            'tag_names': ['–ù–æ–≤–∏–Ω–∫–∞', '–° –ø—Ä–æ–∫–∞—á–∫–æ–π', '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
        {
            'title': 'The Last of Us', 
            'price': 1299.00, 
            'platform': 'PS4', 
            'year_release': 2013, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': '–ü–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Ç–∏—á–µ—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ –≤—ã–∂–∏–≤–∞–Ω–∏–∏ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –º–µ–∂–¥—É –î–∂–æ—ç–ª–æ–º –∏ –≠–ª–ª–∏.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–≠–∫—à–µ–Ω', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–•–æ—Ä—Ä–æ—Ä'],
            'tag_names': ['–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
        {
            'title': 'Cyberpunk 2077', 
            'price': 1899.00, 
            'platform': 'PC', 
            'year_release': 2020, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': 'RPG –≤ –∫–∏–±–µ—Ä–ø–∞–Ω–∫-–º–∏—Ä–µ –±—É–¥—É—â–µ–≥–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –º–∏—Ä–æ–º –∏ –Ω–µ–ª–∏–Ω–µ–π–Ω—ã–º —Å—é–∂–µ—Ç–æ–º.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['RPG', '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–≠–∫—à–µ–Ω'],
            'tag_names': ['–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è', '–° –ø—Ä–æ–∫–∞—á–∫–æ–π', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
        {
            'title': 'Red Dead Redemption 2', 
            'price': 2199.00, 
            'platform': 'PS4', 
            'year_release': 2018, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –¥–∏–∫–æ–º –∑–∞–ø–∞–¥–µ —Å –≥–ª—É–±–æ–∫–∏–º —Å—é–∂–µ—Ç–æ–º –∏ –æ—Ç–∫—Ä—ã—Ç—ã–º –º–∏—Ä–æ–º.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–≠–∫—à–µ–Ω', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä'],
            'tag_names': ['–•–∏—Ç –ø—Ä–æ–¥–∞–∂', '–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä', '–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
        {
            'title': 'Minecraft', 
            'price': 799.00, 
            'platform': 'PC', 
            'year_release': 2011, 
            'is_stock': True, 
            'age_rating': '7+',
            'description': '–ü–µ—Å–æ—á–Ω–∏—Ü–∞ —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –≤—ã–∂–∏–≤–∞–Ω–∏—è.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–ü–µ—Å–æ—á–Ω–∏—Ü–∞', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–í—ã–∂–∏–≤–∞–Ω–∏–µ'],
            'tag_names': ['–° –∫—Ä–∞—Ñ—Ç–æ–º', '–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä', '–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤']
        },
        {
            'title': 'FIFA 23', 
            'price': 2999.00, 
            'platform': 'PS5', 
            'year_release': 2022, 
            'is_stock': True, 
            'age_rating': '3+',
            'description': '–§—É—Ç–±–æ–ª—å–Ω—ã–π —Å–∏–º—É–ª—è—Ç–æ—Ä —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–æ–π –∏ –≥–µ–π–º–ø–ª–µ–µ–º.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–°–ø–æ—Ä—Ç', '–°–∏–º—É–ª—è—Ç–æ—Ä'],
            'tag_names': ['–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä', '–°–ø–æ—Ä—Ç']
        },
        {
            'title': 'Resident Evil 4', 
            'price': 2499.00, 
            'platform': 'PS5', 
            'year_release': 2023, 
            'is_stock': True, 
            'age_rating': '18+',
            'description': '–•–æ—Ä—Ä–æ—Ä-—ç–∫—à–µ–Ω —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤—ã–∂–∏–≤–∞–Ω–∏—è –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º —Å—é–∂–µ—Ç–æ–º.',
            'is_published': Status.PUBLISHED,
            'genre_names': ['–•–æ—Ä—Ä–æ—Ä', '–≠–∫—à–µ–Ω', '–í—ã–∂–∏–≤–∞–Ω–∏–µ'],
            'tag_names': ['–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∞—è', '–û–¥–∏–Ω–æ—á–Ω–∞—è']
        },
    ]

    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—ã
    games_dict = {}
    for game_data in games_data:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∂–∞–Ω—Ä–æ–≤ –∏ —Ç–µ–≥–æ–≤
        genre_names = game_data.pop('genre_names', [])
        tag_names = game_data.pop('tag_names', [])
        
        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É (image –±—É–¥–µ—Ç None - –∑–∞–ø–æ–ª–Ω–∏–º —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É)
        game = Game.objects.create(**game_data)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ —Å –∂–∞–Ω—Ä–∞–º–∏
        for genre_name in genre_names:
            genre = genres_dict.get(genre_name)
            if genre:
                game.genres.add(genre)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ —Å —Ç–µ–≥–∞–º–∏
        for tag_name in tag_names:
            tag = tags_dict.get(tag_name)
            if tag:
                game.tags.add(tag)
        
        games_dict[game.title] = game
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–≥—Ä–∞: {game.title} (slug: {game.slug}) —Å –∂–∞–Ω—Ä–∞–º–∏: {', '.join(genre_names)} –∏ —Ç–µ–≥–∞–º–∏: {', '.join(tag_names)}")

    # –°–æ–∑–¥–∞–µ–º –æ—Ç–∑—ã–≤—ã
    reviews_data = [
        {
            'rating': 5,
            'text': '–û—Ç–ª–∏—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω! –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, –∏–≥—Ä—ã –≤—Å–µ–≥–¥–∞ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–µ. The Witcher 3 —Ä–∞–±–æ—Ç–∞–ª–∞ –±–µ–∑ –Ω–∞—Ä–µ–∫–∞–Ω–∏–π.',
            'game_title': 'The Witcher 3: Wild Hunt'
        },
        {
            'rating': 4,
            'text': '–•–æ—Ä–æ—à–∏–π —Å–µ—Ä–≤–∏—Å, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –∞–∫—Ü–∏–π. GTA V –ø—Ä–∏—à–ª–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.',
            'game_title': 'Grand Theft Auto V'
        },
        {
            'rating': 5,
            'text': 'Elden Ring - –ø—Ä–æ—Å—Ç–æ —à–µ–¥–µ–≤—Ä! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É –∫–ª—é—á–∞. –ë—É–¥—É –ø–æ–∫—É–ø–∞—Ç—å –µ—â—ë.',
            'game_title': 'Elden Ring'
        },
        {
            'rating': 5,
            'text': 'The Last of Us —Ç—Ä–æ–Ω—É–ª–∞ –¥–æ —Å–ª—ë–∑. –ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –Ω–∞ –≤—ã—Å–æ—Ç–µ, –≤—Å–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —ç—Ç–æ—Ç –º–∞–≥–∞–∑–∏–Ω!',
            'game_title': 'The Last of Us'
        },
        {
            'rating': 3,
            'text': 'Uncharted –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å, –Ω–æ –±—ã–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π. –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–≥–ª–∞ –±—ã—Å—Ç—Ä–æ.',
            'game_title': 'Uncharted'
        }
    ]

    for review_data in reviews_data:
        game_title = review_data.pop('game_title')
        
        game = games_dict.get(game_title)
        if game:
            review = Review.objects.create(user=test_user, game=game, **review_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç–∑—ã–≤ –æ—Ç {review.user.username} –Ω–∞ {game.title}")
        else:
            print(f"‚ùå –ò–≥—Ä–∞ '{game_title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞")

    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ (–±–µ–∑ —Å–∞–º–æ–≥–æ —Ñ–∞–π–ª–∞)
        uploaded_file = UploadFiles.objects.create(
            file='test_document.pdf',
            description='–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏',
            file_size=1024
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {uploaded_file.file.name}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {e}")

    print("üéÆ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")

about_db = {
    'title': '–û –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ',
    'description': 'GameStore ‚Äî —ç—Ç–æ –≤–µ–¥—É—â–∏–π –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∏–≥—Ä, –≥–¥–µ –∫–∞–∂–¥—ã–π –≥–µ–π–º–µ—Ä –Ω–∞–π–¥–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –∏—â–µ—Ç. –ú—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Å –æ–¥–Ω–æ–π –ø—Ä–æ—Å—Ç–æ–π —Ü–µ–ª—å—é: —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É –∏–≥—Ä –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω–æ–π, –±—ã—Å—Ç—Ä–æ–π –∏ –ø—Ä–∏—è—Ç–Ω–æ–π –¥–ª—è –≤—Å–µ—Ö –ª—é–±–∏—Ç–µ–ª–µ–π –≤–∏–¥–µ–æ–∏–≥—Ä.',
    'features': [
        {
            'icon': 'üéÆ',
            'title': '–û–≥—Ä–æ–º–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç',
            'text': '–ë–æ–ª–µ–µ 10 000 –∏–≥—Ä –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º: PC, PlayStation, Xbox –∏ Nintendo'
        },
        {
            'icon': 'üíé',
            'title': '–ö–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
            'text': '–¢–æ–ª—å–∫–æ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ –∏–∑–¥–∞—Ç–µ–ª–µ–π'
        },
        {
            'icon': 'üí∞',
            'title': '–í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã',
            'text': '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ü–∏–∏, —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏ –∏ —Å–∏—Å—Ç–µ–º—ã —Å–∫–∏–¥–æ–∫ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'
        },
        {
            'icon': 'üöö',
            'title': '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞',
            'text': '–ö–ª—é—á–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è'
        }
    ],
    'stats': [
        {'number': '10K+', 'label': '–∏–≥—Ä –≤ –∫–∞—Ç–∞–ª–æ–≥–µ'},
        {'number': '50K+', 'label': '–¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'},
        {'number': '5+', 'label': '–ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ'},
        {'number': '24/7', 'label': '–ø–æ–¥–¥–µ—Ä–∂–∫–∞'}
    ],
    'contact_info': {
        'phone': '8-800-XXX-XX-XX',
        'email': 'support@gamestore.ru',
        'work_time': '–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ',
        'support': '24/7'
    }
}

def index(request):
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –ë–î –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
    fill_database()
    
    games_from_db = Game.published.in_stock()
    
    data = {
        'title':'–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
        'menu':menu,
        'games': games_from_db,
    }
    return render(request, 'games/index.html', context=data)

def about(request):
    data = {
        'title': about_db['title'],
        'about': about_db,
        'menu': menu,
    }
    return render(request, 'games/about.html', context=data)

def reviews(request):
    reviews_from_db = Review.objects.filter(is_published=True)
    
    data = {
        'title': '–û—Ç–∑—ã–≤—ã',
        'reviews': reviews_from_db,
        'menu': menu,
    }
    return render(request, 'games/reviews.html', context=data)

def catalog(request):
    games_from_db = Game.published.all()
    
    data = {
        'title': '–ö–∞—Ç–∞–ª–æ–≥',
        'menu': menu,
        'games': games_from_db,
    }
    return render(request, 'games/catalog.html', context=data)

def catalog_by_genre(request, genre_slug):
    genre = get_object_or_404(Genre, slug=genre_slug)
    filtered_games = Game.published.filter(genres=genre)
    
    data = {
        'title': f'–ö–∞—Ç–∞–ª–æ–≥ - {genre.name}',
        'games': filtered_games,
        'menu': menu,
        'current_genre': genre_slug,
    }
    return render(request, 'games/catalog.html', context=data)

def catalog_game_slug(request, game_slug):
    game = get_object_or_404(Game.published, slug=game_slug)
    
    data = {
        'title': game.title,
        'game': game,
        'menu': menu,
    }
    return render(request, 'games/game_detail.html', context=data)

def catalog_by_tag(request, tag_slug):
    tag = get_object_or_404(Tag, slug=tag_slug)
    filtered_games = Game.published.filter(tags=tag)
    
    data = {
        'title': f'–ö–∞—Ç–∞–ª–æ–≥ - –¢–µ–≥: {tag.name}',
        'games': filtered_games,
        'menu': menu,
        'current_tag': tag_slug,
    }
    return render(request, 'games/catalog.html', context=data)

def login(request):
    data = {
        'title': '–í—Ö–æ–¥',
        'menu': menu,
    }
    return render(request, 'games/login.html', context=data)

def register(request):
    data = {
        'title': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
        'menu': menu,
    }
    return render(request, 'games/register.html', context=data)

def page_not_found(request, exception):
    return HttpResponseNotFound('<h1>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>')

def add_game(request):
    if request.method == 'POST':
        # –î–û–ë–ê–í–õ–Ø–ï–ú request.FILES –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        form = AddGameModelForm(request.POST, request.FILES)
        if form.is_valid():
            try:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                game = form.save()
                return redirect('catalog')
            except Exception as e:
                form.add_error(None, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–≥—Ä—ã: {str(e)}')
                print(f" –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {str(e)}")
        else:
            print("–§–æ—Ä–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏:")
            for field, errors in form.errors.items():
                print(f"   {field}: {', '.join(errors)}")
    else:
        form = AddGameModelForm()
    
    data = {
        'title': '–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É',
        'form': form,
        'menu': menu,
    }
    return render(request, 'games/add_game.html', context=data)

def upload_file(request):
    upload_result = None
    error_message = None
    
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                uploaded_file = request.FILES['file']
                if uploaded_file.size > 10 * 1024 * 1024:
                    form.add_error('file', '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 10MB)')
                else:
                    uploaded_file_obj = form.save()
                    
                    upload_result = {
                        'original_name': uploaded_file_obj.file.name,
                        'saved_name': uploaded_file_obj.file.name,
                        'file_url': uploaded_file_obj.file.url,
                        'file_size': uploaded_file_obj.file_size,
                        'description': uploaded_file_obj.description,
                        'db_id': uploaded_file_obj.id
                    }
                    
            except Exception as e:
                error_message = f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {str(e)}'
                print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")
        else:
            print("–§–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏:")
            for field, errors in form.errors.items():
                print(f"   {field}: {', '.join(errors)}")
    else:
        form = UploadFileForm()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ò–ó –ë–î
    uploaded_files = UploadFiles.objects.all().order_by('-uploaded_at')
    
    data = {
        'title': '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤',
        'form': form,
        'menu': menu,
        'upload_result': upload_result,
        'error_message': error_message,
        'uploaded_files': uploaded_files,
    }
    return render(request, 'games/upload_file.html', context=data)